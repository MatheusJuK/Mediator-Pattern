package devices;

import mediator.SmartHomeMediator;

/**
 * Colaborador concreto (Concrete Colleague) - L√¢mpada Inteligente.
 * Lida apenas com comandos espec√≠ficos para luz (ligar/desligar).
 */
public class Light extends SmartDevice {
    private boolean isOn = false;

    public Light(SmartHomeMediator mediator, String name) {
        super(mediator, name);
    }

    /**
     * Processa o comando recebido do Mediador.
     * A l√≥gica de *parsing* √© m√≠nima, focada apenas nas a√ß√µes de luz.
     * @param command O comando em min√∫sculas e j√° segmentado pelo Mediador.
     */
    @Override
    public void receive(String command) {
        if (command.contains("desligar") || command.contains("apagar")) {
            turnOff();
        } else if (command.contains("ligar") || command.contains("acender")) {
            turnOn();
        } else {
            // Caso receba um comando gen√©rico do Mediador que n√£o √© uma a√ß√£o de luz
            System.out.println("[L√ÇMPADA] " + name + ": Comando n√£o reconhecido (" + command + ").");
        }
    }

    private void turnOn() {
        if (!isOn) {
            isOn = true;
            System.out.println("[L√ÇMPADA] " + name + " foi ligada üí°");
        } else {
            System.out.println("[L√ÇMPADA] " + name + " j√° est√° ligada.");
        }
    }

    private void turnOff() {
        if (isOn) {
            isOn = false;
            System.out.println("[L√ÇMPADA] " + name + " foi desligada üì¥");
        } else {
            System.out.println("[L√ÇMPADA] " + name + " j√° est√° desligada.");
        }
    }
}